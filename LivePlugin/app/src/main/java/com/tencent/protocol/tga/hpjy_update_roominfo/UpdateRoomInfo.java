// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: .\\hpjy_update_roominfo.proto
package com.tencent.protocol.tga.hpjy_update_roominfo;

import com.squareup.tga.Message;
import com.squareup.tga.ProtoField;
import okiotga.ByteString;

import static com.squareup.tga.Message.Datatype.BYTES;
import static com.squareup.tga.Message.Label.REQUIRED;

/**
 * BUSINESS_TYPE_HPJY_UPDATE_ROOM_INFO = 200; 和平精英更新房间信息
 */
public final class UpdateRoomInfo extends Message {

  public static final ByteString DEFAULT_ROOMID = ByteString.EMPTY;
  public static final ByteString DEFAULT_SOURCEID = ByteString.EMPTY;
  public static final ByteString DEFAULT_LIVE_TITLE = ByteString.EMPTY;
  public static final ByteString DEFAULT_LIVE_TYPE = ByteString.EMPTY;
  public static final ByteString DEFAULT_VID = ByteString.EMPTY;

  @ProtoField(tag = 1, type = BYTES, label = REQUIRED)
  public final ByteString roomid;

  /**
   * 房间id
   */
  @ProtoField(tag = 2, type = BYTES, label = REQUIRED)
  public final ByteString sourceid;

  @ProtoField(tag = 3, type = BYTES, label = REQUIRED)
  public final ByteString live_title;

  /**
   * 直播标题
   */
  @ProtoField(tag = 4, type = BYTES, label = REQUIRED)
  public final ByteString live_type;

  /**
   * 直播状态
   */
  @ProtoField(tag = 5, type = BYTES, label = REQUIRED)
  public final ByteString vid;

  public UpdateRoomInfo(ByteString roomid, ByteString sourceid, ByteString live_title, ByteString live_type, ByteString vid) {
    this.roomid = roomid;
    this.sourceid = sourceid;
    this.live_title = live_title;
    this.live_type = live_type;
    this.vid = vid;
  }

  private UpdateRoomInfo(Builder builder) {
    this(builder.roomid, builder.sourceid, builder.live_title, builder.live_type, builder.vid);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof UpdateRoomInfo)) return false;
    UpdateRoomInfo o = (UpdateRoomInfo) other;
    return equals(roomid, o.roomid)
        && equals(sourceid, o.sourceid)
        && equals(live_title, o.live_title)
        && equals(live_type, o.live_type)
        && equals(vid, o.vid);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = roomid != null ? roomid.hashCode() : 0;
      result = result * 37 + (sourceid != null ? sourceid.hashCode() : 0);
      result = result * 37 + (live_title != null ? live_title.hashCode() : 0);
      result = result * 37 + (live_type != null ? live_type.hashCode() : 0);
      result = result * 37 + (vid != null ? vid.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<UpdateRoomInfo> {

    public ByteString roomid;
    public ByteString sourceid;
    public ByteString live_title;
    public ByteString live_type;
    public ByteString vid;

    public Builder() {
    }

    public Builder(UpdateRoomInfo message) {
      super(message);
      if (message == null) return;
      this.roomid = message.roomid;
      this.sourceid = message.sourceid;
      this.live_title = message.live_title;
      this.live_type = message.live_type;
      this.vid = message.vid;
    }

    public Builder roomid(ByteString roomid) {
      this.roomid = roomid;
      return this;
    }

    /**
     * 房间id
     */
    public Builder sourceid(ByteString sourceid) {
      this.sourceid = sourceid;
      return this;
    }

    public Builder live_title(ByteString live_title) {
      this.live_title = live_title;
      return this;
    }

    /**
     * 直播标题
     */
    public Builder live_type(ByteString live_type) {
      this.live_type = live_type;
      return this;
    }

    /**
     * 直播状态
     */
    public Builder vid(ByteString vid) {
      this.vid = vid;
      return this;
    }

    @Override
    public UpdateRoomInfo build() {
      checkRequiredFields();
      return new UpdateRoomInfo(this);
    }
  }
}
