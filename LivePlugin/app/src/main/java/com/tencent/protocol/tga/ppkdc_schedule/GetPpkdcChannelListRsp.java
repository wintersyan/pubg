// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: .\\ppkdc_schedule.proto
package com.tencent.protocol.tga.ppkdc_schedule;

import com.squareup.tga.Message;
import com.squareup.tga.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.tga.Message.Datatype.UINT32;
import static com.squareup.tga.Message.Label.REPEATED;
import static com.squareup.tga.Message.Label.REQUIRED;

/**
 * 0x1 获取频道列表-响应
 */
public final class GetPpkdcChannelListRsp extends Message {

  public static final Integer DEFAULT_RESULT = 0;
  public static final List<ChannelInfo> DEFAULT_CHANNEL_LIST = Collections.emptyList();

  @ProtoField(tag = 1, type = UINT32, label = REQUIRED)
  public final Integer result;

  @ProtoField(tag = 2, label = REPEATED, messageType = ChannelInfo.class)
  public final List<ChannelInfo> channel_list;

  public GetPpkdcChannelListRsp(Integer result, List<ChannelInfo> channel_list) {
    this.result = result;
    this.channel_list = immutableCopyOf(channel_list);
  }

  private GetPpkdcChannelListRsp(Builder builder) {
    this(builder.result, builder.channel_list);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof GetPpkdcChannelListRsp)) return false;
    GetPpkdcChannelListRsp o = (GetPpkdcChannelListRsp) other;
    return equals(result, o.result)
        && equals(channel_list, o.channel_list);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = this.result != null ? this.result.hashCode() : 0;
      result = result * 37 + (channel_list != null ? channel_list.hashCode() : 1);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<GetPpkdcChannelListRsp> {

    public Integer result;
    public List<ChannelInfo> channel_list;

    public Builder() {
    }

    public Builder(GetPpkdcChannelListRsp message) {
      super(message);
      if (message == null) return;
      this.result = message.result;
      this.channel_list = copyOf(message.channel_list);
    }

    public Builder result(Integer result) {
      this.result = result;
      return this;
    }

    public Builder channel_list(List<ChannelInfo> channel_list) {
      this.channel_list = checkForNulls(channel_list);
      return this;
    }

    @Override
    public GetPpkdcChannelListRsp build() {
      checkRequiredFields();
      return new GetPpkdcChannelListRsp(this);
    }
  }
}
