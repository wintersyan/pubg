// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: .\\common.proto
package com.tencent.protocol.tga.common;

import com.squareup.tga.Message;
import com.squareup.tga.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.tga.Message.Datatype.UINT32;
import static com.squareup.tga.Message.Label.REPEATED;

public final class DbFetchDataTaskItem extends Message {

  public static final List<DbFetchParam> DEFAULT_PARAMS = Collections.emptyList();
  public static final Integer DEFAULT_PRESQLID = 0;

  @ProtoField(tag = 1, label = REPEATED, messageType = DbFetchParam.class)
  public final List<DbFetchParam> params;

  @ProtoField(tag = 2, type = UINT32)
  public final Integer presqlid;

  public DbFetchDataTaskItem(List<DbFetchParam> params, Integer presqlid) {
    this.params = immutableCopyOf(params);
    this.presqlid = presqlid;
  }

  private DbFetchDataTaskItem(Builder builder) {
    this(builder.params, builder.presqlid);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof DbFetchDataTaskItem)) return false;
    DbFetchDataTaskItem o = (DbFetchDataTaskItem) other;
    return equals(params, o.params)
        && equals(presqlid, o.presqlid);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = params != null ? params.hashCode() : 1;
      result = result * 37 + (presqlid != null ? presqlid.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<DbFetchDataTaskItem> {

    public List<DbFetchParam> params;
    public Integer presqlid;

    public Builder() {
    }

    public Builder(DbFetchDataTaskItem message) {
      super(message);
      if (message == null) return;
      this.params = copyOf(message.params);
      this.presqlid = message.presqlid;
    }

    public Builder params(List<DbFetchParam> params) {
      this.params = checkForNulls(params);
      return this;
    }

    public Builder presqlid(Integer presqlid) {
      this.presqlid = presqlid;
      return this;
    }

    @Override
    public DbFetchDataTaskItem build() {
      return new DbFetchDataTaskItem(this);
    }
  }
}
