// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: .\\ppkdc_schedule.proto
package com.tencent.protocol.tga.ppkdc_schedule;

import com.squareup.tga.Message;
import com.squareup.tga.ProtoField;
import okiotga.ByteString;

import static com.squareup.tga.Message.Datatype.BYTES;
import static com.squareup.tga.Message.Datatype.UINT32;
import static com.squareup.tga.Message.Label.REQUIRED;

/**
 * ///////////////////////////////////////////////////////////
 * 0x1 获取频道列表-请求
 */
public final class GetPpkdcChannelListReq extends Message {

  public static final ByteString DEFAULT_USER_ID = ByteString.EMPTY;
  public static final ByteString DEFAULT_GAME_ID = ByteString.EMPTY;
  public static final Integer DEFAULT_ACCOUNT_TYPE = 0;
  public static final Integer DEFAULT_SOURCE_ID = 0;

  @ProtoField(tag = 1, type = BYTES, label = REQUIRED)
  public final ByteString user_id;

  /**
   * 用户id
   */
  @ProtoField(tag = 2, type = BYTES, label = REQUIRED)
  public final ByteString game_id;

  /**
   * 游戏id
   */
  @ProtoField(tag = 3, type = UINT32)
  public final Integer account_type;

  /**
   * 账号类型, 1:qq, 2:微信
   */
  @ProtoField(tag = 4, type = UINT32)
  public final Integer source_id;

  public GetPpkdcChannelListReq(ByteString user_id, ByteString game_id, Integer account_type, Integer source_id) {
    this.user_id = user_id;
    this.game_id = game_id;
    this.account_type = account_type;
    this.source_id = source_id;
  }

  private GetPpkdcChannelListReq(Builder builder) {
    this(builder.user_id, builder.game_id, builder.account_type, builder.source_id);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof GetPpkdcChannelListReq)) return false;
    GetPpkdcChannelListReq o = (GetPpkdcChannelListReq) other;
    return equals(user_id, o.user_id)
        && equals(game_id, o.game_id)
        && equals(account_type, o.account_type)
        && equals(source_id, o.source_id);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = user_id != null ? user_id.hashCode() : 0;
      result = result * 37 + (game_id != null ? game_id.hashCode() : 0);
      result = result * 37 + (account_type != null ? account_type.hashCode() : 0);
      result = result * 37 + (source_id != null ? source_id.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<GetPpkdcChannelListReq> {

    public ByteString user_id;
    public ByteString game_id;
    public Integer account_type;
    public Integer source_id;

    public Builder() {
    }

    public Builder(GetPpkdcChannelListReq message) {
      super(message);
      if (message == null) return;
      this.user_id = message.user_id;
      this.game_id = message.game_id;
      this.account_type = message.account_type;
      this.source_id = message.source_id;
    }

    public Builder user_id(ByteString user_id) {
      this.user_id = user_id;
      return this;
    }

    /**
     * 用户id
     */
    public Builder game_id(ByteString game_id) {
      this.game_id = game_id;
      return this;
    }

    /**
     * 游戏id
     */
    public Builder account_type(Integer account_type) {
      this.account_type = account_type;
      return this;
    }

    /**
     * 账号类型, 1:qq, 2:微信
     */
    public Builder source_id(Integer source_id) {
      this.source_id = source_id;
      return this;
    }

    @Override
    public GetPpkdcChannelListReq build() {
      checkRequiredFields();
      return new GetPpkdcChannelListReq(this);
    }
  }
}
