// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: .\\chat_msg.proto
package com.tencent.protocol.tga.chatMsg;

import com.squareup.tga.Message;
import com.squareup.tga.ProtoField;
import okiotga.ByteString;

import static com.squareup.tga.Message.Datatype.BYTES;
import static com.squareup.tga.Message.Label.REQUIRED;

/**
 * 房间封禁消息
 */
public final class RoomForbiddenMsg extends Message {

  public static final ByteString DEFAULT_ROOMID = ByteString.EMPTY;
  public static final ByteString DEFAULT_USERID = ByteString.EMPTY;
  public static final ByteString DEFAULT_FORBIDDEN_REASON = ByteString.EMPTY;
  public static final ByteString DEFAULT_FORBIDDEN_TIME = ByteString.EMPTY;

  @ProtoField(tag = 1, type = BYTES, label = REQUIRED)
  public final ByteString roomid;

  /**
   * 封禁房间id
   */
  @ProtoField(tag = 2, type = BYTES, label = REQUIRED)
  public final ByteString userid;

  /**
   * 封禁主播id
   */
  @ProtoField(tag = 3, type = BYTES)
  public final ByteString forbidden_reason;

  /**
   * 封禁原因
   */
  @ProtoField(tag = 4, type = BYTES)
  public final ByteString forbidden_time;

  public RoomForbiddenMsg(ByteString roomid, ByteString userid, ByteString forbidden_reason, ByteString forbidden_time) {
    this.roomid = roomid;
    this.userid = userid;
    this.forbidden_reason = forbidden_reason;
    this.forbidden_time = forbidden_time;
  }

  private RoomForbiddenMsg(Builder builder) {
    this(builder.roomid, builder.userid, builder.forbidden_reason, builder.forbidden_time);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof RoomForbiddenMsg)) return false;
    RoomForbiddenMsg o = (RoomForbiddenMsg) other;
    return equals(roomid, o.roomid)
        && equals(userid, o.userid)
        && equals(forbidden_reason, o.forbidden_reason)
        && equals(forbidden_time, o.forbidden_time);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = roomid != null ? roomid.hashCode() : 0;
      result = result * 37 + (userid != null ? userid.hashCode() : 0);
      result = result * 37 + (forbidden_reason != null ? forbidden_reason.hashCode() : 0);
      result = result * 37 + (forbidden_time != null ? forbidden_time.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<RoomForbiddenMsg> {

    public ByteString roomid;
    public ByteString userid;
    public ByteString forbidden_reason;
    public ByteString forbidden_time;

    public Builder() {
    }

    public Builder(RoomForbiddenMsg message) {
      super(message);
      if (message == null) return;
      this.roomid = message.roomid;
      this.userid = message.userid;
      this.forbidden_reason = message.forbidden_reason;
      this.forbidden_time = message.forbidden_time;
    }

    public Builder roomid(ByteString roomid) {
      this.roomid = roomid;
      return this;
    }

    /**
     * 封禁房间id
     */
    public Builder userid(ByteString userid) {
      this.userid = userid;
      return this;
    }

    /**
     * 封禁主播id
     */
    public Builder forbidden_reason(ByteString forbidden_reason) {
      this.forbidden_reason = forbidden_reason;
      return this;
    }

    /**
     * 封禁原因
     */
    public Builder forbidden_time(ByteString forbidden_time) {
      this.forbidden_time = forbidden_time;
      return this;
    }

    @Override
    public RoomForbiddenMsg build() {
      checkRequiredFields();
      return new RoomForbiddenMsg(this);
    }
  }
}
