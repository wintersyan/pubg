// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: .\\online_data.proto
package com.tencent.protocol.tga.online_data;

import com.squareup.tga.Message;
import com.squareup.tga.ProtoField;
import okiotga.ByteString;

import static com.squareup.tga.Message.Datatype.BYTES;
import static com.squareup.tga.Message.Datatype.UINT32;
import static com.squareup.tga.Message.Label.REQUIRED;

/**
 * SUBCMD_ONLINE_HELLO = 0x1;  // 上报在线心跳
 */
public final class OnlineHelloReq extends Message {

  public static final ByteString DEFAULT_USERID = ByteString.EMPTY;
  public static final ByteString DEFAULT_OPENID = ByteString.EMPTY;
  public static final Integer DEFAULT_CLIENT_TYPE = 0;
  public static final ByteString DEFAULT_GAMEID = ByteString.EMPTY;
  public static final Integer DEFAULT_AREAID = 0;
  public static final ByteString DEFAULT_ROOMID = ByteString.EMPTY;

  @ProtoField(tag = 1, type = BYTES, label = REQUIRED)
  public final ByteString userid;

  @ProtoField(tag = 2, type = BYTES)
  public final ByteString openid;

  @ProtoField(tag = 3, type = UINT32)
  public final Integer client_type;

  @ProtoField(tag = 4, type = BYTES)
  public final ByteString gameid;

  @ProtoField(tag = 5, type = UINT32)
  public final Integer areaid;

  @ProtoField(tag = 6, type = BYTES)
  public final ByteString roomid;

  public OnlineHelloReq(ByteString userid, ByteString openid, Integer client_type, ByteString gameid, Integer areaid, ByteString roomid) {
    this.userid = userid;
    this.openid = openid;
    this.client_type = client_type;
    this.gameid = gameid;
    this.areaid = areaid;
    this.roomid = roomid;
  }

  private OnlineHelloReq(Builder builder) {
    this(builder.userid, builder.openid, builder.client_type, builder.gameid, builder.areaid, builder.roomid);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof OnlineHelloReq)) return false;
    OnlineHelloReq o = (OnlineHelloReq) other;
    return equals(userid, o.userid)
        && equals(openid, o.openid)
        && equals(client_type, o.client_type)
        && equals(gameid, o.gameid)
        && equals(areaid, o.areaid)
        && equals(roomid, o.roomid);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = userid != null ? userid.hashCode() : 0;
      result = result * 37 + (openid != null ? openid.hashCode() : 0);
      result = result * 37 + (client_type != null ? client_type.hashCode() : 0);
      result = result * 37 + (gameid != null ? gameid.hashCode() : 0);
      result = result * 37 + (areaid != null ? areaid.hashCode() : 0);
      result = result * 37 + (roomid != null ? roomid.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<OnlineHelloReq> {

    public ByteString userid;
    public ByteString openid;
    public Integer client_type;
    public ByteString gameid;
    public Integer areaid;
    public ByteString roomid;

    public Builder() {
    }

    public Builder(OnlineHelloReq message) {
      super(message);
      if (message == null) return;
      this.userid = message.userid;
      this.openid = message.openid;
      this.client_type = message.client_type;
      this.gameid = message.gameid;
      this.areaid = message.areaid;
      this.roomid = message.roomid;
    }

    public Builder userid(ByteString userid) {
      this.userid = userid;
      return this;
    }

    public Builder openid(ByteString openid) {
      this.openid = openid;
      return this;
    }

    public Builder client_type(Integer client_type) {
      this.client_type = client_type;
      return this;
    }

    public Builder gameid(ByteString gameid) {
      this.gameid = gameid;
      return this;
    }

    public Builder areaid(Integer areaid) {
      this.areaid = areaid;
      return this;
    }

    public Builder roomid(ByteString roomid) {
      this.roomid = roomid;
      return this;
    }

    @Override
    public OnlineHelloReq build() {
      checkRequiredFields();
      return new OnlineHelloReq(this);
    }
  }
}
