// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: .\\common.proto
package com.tencent.protocol.tga.common;

import com.squareup.tga.Message;
import com.squareup.tga.ProtoField;
import java.util.Collections;
import java.util.List;
import okiotga.ByteString;

import static com.squareup.tga.Message.Datatype.BYTES;
import static com.squareup.tga.Message.Label.REPEATED;

public final class AblumItem extends Message {

  public static final ByteString DEFAULT_ID = ByteString.EMPTY;
  public static final ByteString DEFAULT_TITLE = ByteString.EMPTY;
  public static final ByteString DEFAULT_AUTHOR = ByteString.EMPTY;
  public static final ByteString DEFAULT_DESCRIPTION = ByteString.EMPTY;
  public static final List<VideoItem> DEFAULT_VIDEO_LIST = Collections.emptyList();

  @ProtoField(tag = 1, type = BYTES)
  public final ByteString id;

  @ProtoField(tag = 2, type = BYTES)
  public final ByteString title;

  /**
   * 标题
   */
  @ProtoField(tag = 3, type = BYTES)
  public final ByteString author;

  /**
   * 作者
   */
  @ProtoField(tag = 4, type = BYTES)
  public final ByteString description;

  /**
   * 描述
   */
  @ProtoField(tag = 5, label = REPEATED, messageType = VideoItem.class)
  public final List<VideoItem> video_list;

  public AblumItem(ByteString id, ByteString title, ByteString author, ByteString description, List<VideoItem> video_list) {
    this.id = id;
    this.title = title;
    this.author = author;
    this.description = description;
    this.video_list = immutableCopyOf(video_list);
  }

  private AblumItem(Builder builder) {
    this(builder.id, builder.title, builder.author, builder.description, builder.video_list);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof AblumItem)) return false;
    AblumItem o = (AblumItem) other;
    return equals(id, o.id)
        && equals(title, o.title)
        && equals(author, o.author)
        && equals(description, o.description)
        && equals(video_list, o.video_list);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = id != null ? id.hashCode() : 0;
      result = result * 37 + (title != null ? title.hashCode() : 0);
      result = result * 37 + (author != null ? author.hashCode() : 0);
      result = result * 37 + (description != null ? description.hashCode() : 0);
      result = result * 37 + (video_list != null ? video_list.hashCode() : 1);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<AblumItem> {

    public ByteString id;
    public ByteString title;
    public ByteString author;
    public ByteString description;
    public List<VideoItem> video_list;

    public Builder() {
    }

    public Builder(AblumItem message) {
      super(message);
      if (message == null) return;
      this.id = message.id;
      this.title = message.title;
      this.author = message.author;
      this.description = message.description;
      this.video_list = copyOf(message.video_list);
    }

    public Builder id(ByteString id) {
      this.id = id;
      return this;
    }

    public Builder title(ByteString title) {
      this.title = title;
      return this;
    }

    /**
     * 标题
     */
    public Builder author(ByteString author) {
      this.author = author;
      return this;
    }

    /**
     * 作者
     */
    public Builder description(ByteString description) {
      this.description = description;
      return this;
    }

    /**
     * 描述
     */
    public Builder video_list(List<VideoItem> video_list) {
      this.video_list = checkForNulls(video_list);
      return this;
    }

    @Override
    public AblumItem build() {
      return new AblumItem(this);
    }
  }
}
